@model ClaimViewModel

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Submit Claim</h3>
        </div>
        <div class="card-body">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <ul>
                        @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@modelError.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }

            <form asp-controller="Claims" asp-action="Submit" method="post" enctype="multipart/form-data" id="claimForm">
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    <label asp-for="LecturerId" class="form-label">Lecturer ID</label>
                    <input asp-for="LecturerId" class="form-control" type="number" required />
                    <span asp-validation-for="LecturerId" class="text-danger"></span>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="HoursWorked" class="form-label">Hours Worked</label>
                        <input asp-for="HoursWorked" class="form-control" type="number" step="0.1" min="0.1" required />
                        <span asp-validation-for="HoursWorked" class="text-danger"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="HourlyRate" class="form-label">Hourly Rate</label>
                        <input asp-for="HourlyRate" class="form-control" type="number" step="0.01" min="0.01" required />
                        <span asp-validation-for="HourlyRate" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="Notes" class="form-label">Notes</label>
                    <textarea asp-for="Notes" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Notes" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label">Supporting Documents</label>
                    <div class="input-group">
                        <input type="file" class="form-control" name="documents" multiple
                               accept=".pdf,.docx,.xlsx" id="documents" />
                        <button type="button" class="btn btn-secondary" id="clearFiles">Clear</button>
                    </div>
                    <small class="text-muted">Accepted formats: PDF, DOCX, XLSX (Max 10MB per file)</small>
                    <div id="fileList" class="mt-2"></div>
                </div>

                <div id="submitError" class="alert alert-danger d-none"></div>
                <button type="submit" class="btn btn-primary btn-lg w-100" id="submitButton">Submit Claim</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // File input handling
            $('#documents').on('change', function () {
                const fileList = $('#fileList');
                fileList.empty();

                const files = this.files;
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    if (file.size > 10 * 1024 * 1024) {
                        alert(`File ${file.name} is too large. Maximum size is 10MB.`);
                        this.value = '';
                        fileList.empty();
                        return;
                    }
                    fileList.append(`<div class="badge bg-secondary me-2 mb-2">${file.name}</div>`);
                }
            });

            $('#clearFiles').click(function () {
                $('#documents').val('');
                $('#fileList').empty();
            });

            // Form submission handling
            $('#claimForm').on('submit', function (e) {
                const submitButton = $('#submitButton');
                const submitError = $('#submitError');

                submitButton.prop('disabled', true);
                submitError.addClass('d-none');

                // Clear any previous error messages
                $('.text-danger').text('');

                const formData = new FormData(this);

                $.ajax({
                    url: $(this).attr('action'),
                    method: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            window.location.href = '/Claims/Index';
                        } else {
                            submitError.removeClass('d-none').text('Submission Recived');
                            submitButton.prop('disabled', false);
                        }
                    },
                    error: function (xhr) {
                        submitError.removeClass('d-none')
                            .text('Submission Recived');
                        submitButton.prop('disabled', false);
                        console.error('Submission error:', xhr);
                    }
                });

                e.preventDefault();
            });
        });
    </script>
}